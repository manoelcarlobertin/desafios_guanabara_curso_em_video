# Gerando 6 n√∫meros aleat√≥rios √∫nicos, separando pares e √≠mpares e exibindo o resultado
numeros = (1..100).to_a.sample(6) # Gera 6 n√∫meros * √∫nicos * entre 1 e 100
pares, impares = numeros.partition(&:even?)

# Exibi√ß√£o dos resultados formatados
puts "\nüîπ N√∫meros sorteados: #{numeros.join(', ')}"
puts "\nüîπ Classifica√ß√£o dos n√∫meros:"
puts "- Pares: #{pares.join(', ')} | Soma: #{pares.sum}"
puts "- √çmpares: #{impares.join(', ')} | Soma: #{impares.sum}"

# Gerando 6 n√∫meros aleat√≥rios, separando pares e √≠mpares e exibindo o resultado

numeros = Array.new(6) { rand(1..100) } # Gera 6 n√∫meros aleat√≥rios entre 1 e 100
# pares, impares = [], [] # aqui os n√∫meros se REPETEM.
puts "\n N√∫meros sorteados, que podem se * reperir * : #{numeros.join(', ')}"
# numeros.each do |num|
#   case num.even?
#   when true
#     pares << num
#   else
#     impares << num
#   end
# end

# # Exibi√ß√£o dos resultados
# puts "\nüîπ N√∫meros gerados: #{numeros.join(', ')}"
# puts "\nüîπ Classifica√ß√£o dos n√∫meros:"
# puts "- Pares: #{pares.join(', ')} | Soma: #{pares.sum}"
# puts "- √çmpares: #{impares.join(', ')} | Soma: #{impares.sum}"
